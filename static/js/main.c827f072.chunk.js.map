{"version":3,"sources":["utils/constants.ts","components/Header/AppTitle/index.tsx","components/Actions/ActionIcon/index.tsx","components/Actions/ActionItem/index.tsx","contexts/ThemeModeContext.ts","components/Header/ThemeSwitcher/index.tsx","components/Actions/index.tsx","components/Header/Menu/MobileMenu.tsx","components/Header/AppIcon/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","components/Layout/index.tsx","config/routes.ts","pages/Main.tsx","App.tsx","styles/theme.ts","reportWebVitals.ts","index.tsx"],"names":["APP_TITLE","FOOTER_TEXT","Date","getFullYear","DARK_MODE_THEME","LIGHT_MODE_THEME","AppTitle","Box","sx","paddingLeft","StyledAppTitle","variant","noWrap","styled","Typography","ActionIcon","badgeContent","icon","theme","useTheme","Badge","color","palette","mode","Icon","component","ActionItem","title","onClick","disableTooltip","buttonIcon","IconButton","size","Tooltip","placement","arrow","ThemeModeContext","createContext","ThemeSwitcher","toggleThemeMode","useContext","Flare","NightsStay","More","MoreIcon","MobileMenu","isMenuOpen","handleMenuClose","handleMenuOpen","anchorEl","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","textAlign","MenuItem","AppIcon","Header","useState","mobileMoreAnchorEl","setMobileMoreAnchorEl","handleMobileMenuOpen","event","currentTarget","AppBar","position","zIndex","drawer","Toolbar","disableGutters","display","xs","md","flexGrow","alignSelf","alignItems","Boolean","Footer","FooterWrapper","FooterText","background","paper","Layout","children","LayoutWrapper","ContentWrapper","routes","key","description","Helmet","path","isEnabled","HomeIcon","appendDivider","App","setMode","themeMode","useMemo","prevMode","createTheme","responsiveFontSizes","getAppTheme","addRoute","route","exact","Provider","value","ThemeProvider","CssBaseline","map","subRoutes","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","name","content","rel","href","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.c827f072.chunk.js","sourcesContent":["// APP TEXT\nexport const APP_TITLE = 'schild';\nexport const APP_DESCRIPTION = 'Service for protecting Minecraft against attacks through mods.';\nexport const FOOTER_TEXT = `(C) ${new Date().getFullYear()} `;\n// UI CONSTANTS\nexport const FOOTER_HEIGHT = 30;\nexport const HEADER_HEIGHT = 60;\nexport const DRAWER_WIDTH = 250;\n// APP THEME\nexport const DARK_MODE_THEME = 'dark';\nexport const LIGHT_MODE_THEME = 'light';\n","import { Box, styled, Typography } from '@mui/material';\nimport SecurityIcon from '@mui/icons-material/Security';\n\nimport { APP_TITLE } from '../../../utils/constants';\n\nexport const AppTitle = () => (\n  <Box sx={{ paddingLeft: \"10px\" }}>\n    <StyledAppTitle variant=\"h6\" noWrap>\n      {APP_TITLE}\n    </StyledAppTitle>\n  </Box>\n);\n\nconst StyledAppTitle = styled(Typography)`\n  display: {\n    xs: none;\n    sm: block;\n  },\n  cursor: default;\n`;\n","import { ComponentType } from 'react';\nimport { Badge, Icon, useTheme } from '@mui/material';\n\nimport { LIGHT_MODE_THEME } from '../../../utils/constants';\n\ninterface ActionIconProps {\n  badgeContent?: number;\n  icon: ComponentType;\n}\n\nexport const ActionIcon = ({ badgeContent, icon }: ActionIconProps) => {\n  const theme = useTheme();\n  return badgeContent ? (\n    <Badge badgeContent={badgeContent} color={theme.palette.mode === LIGHT_MODE_THEME ? 'error' : 'primary'}>\n      <Icon component={icon} />\n    </Badge>\n  ) : (\n    <Icon component={icon} />\n  );\n};\n","import React, { ComponentType } from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\n\nimport { ActionIcon } from '../ActionIcon';\n\ninterface ActionItemProps {\n  title: string;\n  icon: ComponentType;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n  badgeContent?: number;\n  disableTooltip?: boolean;\n}\n\nexport const ActionItem = ({ title, icon, onClick, badgeContent, disableTooltip = false }: ActionItemProps) => {\n  const buttonIcon = (\n    <IconButton size=\"large\" color=\"inherit\" onClick={onClick}>\n      <ActionIcon badgeContent={badgeContent} icon={icon} />\n    </IconButton>\n  );\n\n  return disableTooltip ? (\n    buttonIcon\n  ) : (\n    <Tooltip title={title} placement=\"bottom\" arrow>\n      {buttonIcon}\n    </Tooltip>\n  );\n};\n","import { createContext } from 'react';\n\nexport interface IThemeModeContext {\n  toggleThemeMode: () => void;\n}\n\nexport const ThemeModeContext = createContext<IThemeModeContext>({} as IThemeModeContext);\n","import { useContext } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Flare, NightsStay } from '@mui/icons-material';\n\nimport { ActionItem } from '../../Actions/ActionItem';\n\nimport { ThemeModeContext } from '../../../contexts';\nimport { LIGHT_MODE_THEME } from '../../../utils/constants';\n\nexport const ThemeSwitcher = ({ disableTooltip = false }: { disableTooltip?: boolean }) => {\n  const theme = useTheme();\n  const { toggleThemeMode } = useContext(ThemeModeContext);\n\n  return (\n    <ActionItem\n      title=\"Toggle Theme\"\n      icon={theme.palette.mode === LIGHT_MODE_THEME ? Flare : NightsStay}\n      onClick={toggleThemeMode}\n      disableTooltip={disableTooltip}\n    />\n  );\n};\n","import React from 'react';\nimport {\n  MoreVert as MoreIcon\n} from '@mui/icons-material';\n\nimport { ActionItem } from './ActionItem';\n\ninterface ActionProps {\n  total?: number;\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void;\n  disableTooltip?: boolean;\n}\n\nexport const More = ({ onClick, disableTooltip = false }: ActionProps) => (\n  <ActionItem title=\"More\" icon={MoreIcon} onClick={onClick} disableTooltip={disableTooltip} />\n);\n","import React, { useContext } from 'react';\nimport { Box, Menu, MenuItem } from '@mui/material';\n\nimport { ThemeSwitcher } from '../ThemeSwitcher';\nimport { ThemeModeContext } from '../../../contexts';\n\ninterface MobileMenuProps {\n  isMenuOpen: boolean;\n  handleMenuOpen: (event: React.MouseEvent<HTMLElement>) => void;\n  handleMenuClose: () => void;\n  anchorEl: HTMLElement | null;\n}\n\nexport const MobileMenu = ({ isMenuOpen, handleMenuOpen, handleMenuClose, anchorEl }: MobileMenuProps) => {\n  const { toggleThemeMode } = useContext(ThemeModeContext);\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id=\"primary-search-account-menu-mobile\"\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <Box sx={{ textAlign: 'center' }}>\n        <MenuItem onClick={toggleThemeMode}>\n          <ThemeSwitcher disableTooltip />\n          Toggle Theme\n        </MenuItem>\n      </Box>\n    </Menu>\n  );\n};\n","import { styled, Typography } from '@mui/material';\nimport SecurityIcon from '@mui/icons-material/Security';\n\nexport const AppIcon = () => (\n  <StyledAppTitle variant=\"h6\" noWrap>\n      <SecurityIcon />\n  </StyledAppTitle>\n);\n\nconst StyledAppTitle = styled(Typography)`\n  display: {\n    xs: none;\n    sm: block;\n  }\n  cursor: default;\n`;\n","import React, { useState } from 'react';\nimport { AppBar, Box, Toolbar } from '@mui/material';\n\nimport { AppTitle } from './AppTitle';\nimport { ThemeSwitcher } from './ThemeSwitcher';\nimport { More } from '../Actions';\nimport { MobileMenu } from './Menu';\nimport { AppIcon } from './AppIcon';\n\nexport const Header = () => {\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState<null | HTMLElement>(null);\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => setMobileMoreAnchorEl(event.currentTarget);\n\n  const handleMobileMenuClose = () => setMobileMoreAnchorEl(null);\n\n  return (\n    <>\n      <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Toolbar disableGutters variant=\"dense\">\n          <Box sx={{ display: { xs: 'none', md: 'block' } }}>\n            <AppTitle />\n          </Box>\n          <Box sx={{flexGrow: 1}} />\n          <Box sx={{ alignSelf: \"center\" }}>\n            <AppIcon />\n          </Box>\n          <Box sx={{flexGrow: 1}} />\n          <Box sx={{ display: { xs: 'none', md: 'flex', alignItems: 'center' } }}>\n            <ThemeSwitcher />\n          </Box>\n          <Box sx={{ display: { xs: 'flex', md: 'none' }, alignSelf: \"right\" }}>\n            <More onClick={handleMobileMenuOpen} />\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <MobileMenu\n        isMenuOpen={Boolean(mobileMoreAnchorEl)}\n        handleMenuOpen={handleMobileMenuOpen}\n        handleMenuClose={handleMobileMenuClose}\n        anchorEl={mobileMoreAnchorEl}\n      />\n    </>\n  );\n};\n","import { styled, Typography } from '@mui/material';\n\nimport { FOOTER_TEXT, FOOTER_HEIGHT } from '../../utils/constants';\n\nexport const Footer = () => (\n  <FooterWrapper>\n    <FooterText variant=\"caption\" color=\"textSecondary\">\n      {FOOTER_TEXT}\n    </FooterText>\n  </FooterWrapper>\n);\n\nconst FooterWrapper = styled('div')(\n  ({ theme }) => `\n    flex: 1;\n    display: flex;\n    justify-content: center;\n    background: ${theme.palette.background.paper};\n    minHeight: ${FOOTER_HEIGHT};\n`\n);\n\nconst FooterText = styled(Typography)`\n  word-spacing: 0.1rem;\n  text-transform: uppercase;\n`;\n","import { FC } from 'react';\nimport { styled, Box } from '@mui/material';\n\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\n\nimport { FOOTER_HEIGHT } from '../../utils/constants';\n\nexport const Layout: FC = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <ContentWrapper>\n        <Box component=\"header\">\n          <Header />\n        </Box>\n        <Box component=\"main\">\n          {children}\n        </Box>\n      </ContentWrapper>\n      <Box component=\"footer\">\n        <Footer />\n      </Box>\n    </LayoutWrapper>\n  );\n};\n\nconst LayoutWrapper = styled('div')`\n  min-height: 100vh;\n`;\n\nconst ContentWrapper = styled('div')`\n  display: flex;\n  min-height: calc(100vh - ${FOOTER_HEIGHT}px);\n`;","import {\n  Home as HomeIcon\n} from '@mui/icons-material';\n\nimport { Main } from '../pages/Main';\n\nimport { Route } from '../types/Route';\n\nconst routes: Array<Route> = [\n  {\n    key: 'router-main',\n    title: 'Analyze',\n    description: 'Home',\n    component: Main,\n    path: '/',\n    isEnabled: true,\n    icon: HomeIcon,\n    appendDivider: true,\n  }\n];\n\nexport default routes;\n","import { Helmet } from \"react-helmet\";\nimport { APP_TITLE } from \"../utils/constants\";\n\nexport const Main = () => {\n    return (\n        <>\n      <Helmet>\n        <title>\n          {APP_TITLE}\n        </title>\n      </Helmet>\n    </>\n    );\n};","import { useMemo, useState } from 'react';\nimport { CssBaseline, ThemeProvider } from '@mui/material';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Layout } from './components/Layout';\n\nimport { ThemeModeContext } from './contexts';\nimport { routes } from './config';\nimport { Route as AppRoute } from './types';\nimport { getAppTheme } from './styles/theme';\nimport { DARK_MODE_THEME, LIGHT_MODE_THEME } from './utils/constants';\n\nfunction App() {\n  const [mode, setMode] = useState<typeof LIGHT_MODE_THEME | typeof DARK_MODE_THEME>(DARK_MODE_THEME);\n  const themeMode = useMemo(\n    () => ({\n      toggleThemeMode: () => {\n        setMode((prevMode) => (prevMode === LIGHT_MODE_THEME ? DARK_MODE_THEME : LIGHT_MODE_THEME));\n      },\n    }),\n    []\n  );\n\n  const theme = useMemo(() => getAppTheme(mode), [mode]);\n\n  const addRoute = (route: AppRoute) => (\n    <Route key={route.key} path={route.path} component={route.component} exact />\n  );\n\n  return (\n    <ThemeModeContext.Provider value={themeMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Router>\n          <Switch>\n            <Layout>\n              {routes.map((route: AppRoute) =>\n                route.subRoutes ? route.subRoutes.map((item: AppRoute) => addRoute(item)) : addRoute(route)\n              )}\n            </Layout>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </ThemeModeContext.Provider>\n  );\n}\n\nexport default App;\n","import { createTheme, responsiveFontSizes } from '@mui/material';\n\nimport { DARK_MODE_THEME, LIGHT_MODE_THEME } from '../utils/constants';\n\nexport const getAppTheme = (mode: typeof LIGHT_MODE_THEME | typeof DARK_MODE_THEME) => {\n  let theme = createTheme({\n    palette: {\n      mode,\n    },\n  });\n  theme = responsiveFontSizes(theme);\n  return theme;\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\n\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { APP_TITLE, APP_DESCRIPTION } from './utils/constants';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>{APP_TITLE}</title>\n      <meta name=\"description\" content={APP_DESCRIPTION} />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n      <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals(console.log);\n"],"sourceRoot":""}